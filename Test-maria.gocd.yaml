format_version: 10
pipelines:
  Test-maria:
    group: AT20-maria
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables:
      SONAR_TOKEN: AES:LZt0rstkTwgXO+M8iI6aCw==:syDt5UJypZJHtc0Azj2kWM3uOp4PKpBkO20N2zrXTERWk7qqyNt4kbA8DJ7D+oGo
      DOCKER_PASS: AES:Yom6v3AaajlescW3qEyIvg==:brxe3lf8ofDY0F9XJMkqGQ==
    materials:
      git-eebe0ef:
        git: https://github.com/AT20-DevOps/AT20_COMPILER_SERVICES.git
        username: Marseonji
        shallow_clone: false
        auto_update: true
        branch: task13-mh
        encrypted_password: AES:LJ4IAUFK4W+7NrC9EtW+2g==:zIDUwoH7olFG3z9p14+WfA==
    stages:
    - test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit-test:
            timeout: 0
            resources:
            - ubuntu 
            tasks:
            - script: |
                echo ${GIT_COMMIT_HASH} > commit.txt
                cat file.txt
                npm install
                npm test
            artifacts:
            - build:
                source: tests/report/report.html
                destination: html_report
            - build:
                source: Dockerfile
            - build:
                source: docker-compose.mh.yaml
    - code_inspection:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          sonar:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                ls -la
                /godata/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
                        -Dsonar.organization=at20-mh \
                        -Dsonar.projectKey=at20-mh \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=https://sonarcloud.io
    - PackageAndPublish:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          PackageAndPublish:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                is_file: true
                source: Dockerfile
                stage: test
                job: unit-test
                run_if: passed
            - fetch:
                is_file: true
                source: docker-compose.mh.yaml
                stage: Test
                job: unit-test
                run_if: passed
            - script: |
                docker build -t at20_compiler_services .
                docker login -u marseonji -p ${DOCKER_PASS}
                docker tag at20_compiler_services marseonji/at20_compiler_service:${GIT_COMMIT_HASH}
                docker push marseonji/at20_compiler_service:${GIT_COMMIT_HASH}
            artifacts:
            - build:
                source: docker-compose.mh.yaml

  Acceptance:
    group: AT20-maria
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    materials:
      Test-maria:
        pipeline: Test-maria
        stage: PackageAndPublish
    stages:
    - DeployToDev:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          deployToDev:
            timeout: 0
            resources:
            - docker 
            tasks:
            - fetch:
                pipeline: Test-maria
                stage: PackageAndPublish
                job: PackageAndPublish
                source: docker-compose.mh.yaml
                is_file: true
                run_if: passed
            - script: |
                echo deploy here
                ls -la
                export TAG_VERSION=${GIT_COMMIT_HASH} && docker-compose -f docker-compose.mh.yaml up -d
    - Smoke:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          test:
            timeout: 0
            resources:
            - docker
            tasks:
            - script: |
                echo command to run smoke test