format_version: 10
pipelines:
  Test1:
    group: at20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables:
      SONAR_TOKEN: AES:XfNFku9pjEjasE/gu7wC3A==:uMGyzeIr1TyT+XU1eMIuQV5UFna/F/cMhmoAAEOvz7Ib0O5rQ3+iJ7QBnFrSEr3O
    materials:
      git-de9e633:
        git: https://github.com/AT20-DevOps/AT20_COMPILER_SERVICES.git
        shallow_clone: false
        auto_update: true
        branch: task11-cj
    stages:
    - Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit_tests:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                npm install
                npm run test
            artifacts:
            - test:
                source: tests/report/*.xml
                destination: xml_report
            - build:
                source: tests/report/report.html
                destination: html_report
            - dockerfile:
                source: Dockerfile
    - Code-inspection:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          sonar:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                  /godata/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dsonar.organization=at20-cj -Dsonar.projectKey=at20-cj -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io
    - PackageAndPublish:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          package_publish:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
              is_file: true
              source: Dockerfile
              job: unit_test
              run_if: passed
            - script: |
                  ls -al
                  echo docker build -t compiler .
                  echo docker login -u charlesfc001 -p ${DOCKER_PASS}
                  echo docker tag compiler charlesfc001/compiler:${GIT_COMMIT_HASH}
                  echo docker push charlesfc001/compiler:${GIT_COMMIT_HASH}
